[{"/home/sebi/dev/crypto-dolar-blue/src/index.js":"1","/home/sebi/dev/crypto-dolar-blue/src/App.js":"2","/home/sebi/dev/crypto-dolar-blue/src/components/ER.js":"3","/home/sebi/dev/crypto-dolar-blue/src/components/FormattedPrice.js":"4","/home/sebi/dev/crypto-dolar-blue/src/components/Calc.js":"5"},{"size":220,"mtime":1610904338344,"results":"6","hashOfConfig":"7"},{"size":3231,"mtime":1611253834040,"results":"8","hashOfConfig":"7"},{"size":2252,"mtime":1611252214134,"results":"9","hashOfConfig":"7"},{"size":1548,"mtime":1610904338344,"results":"10","hashOfConfig":"7"},{"size":7308,"mtime":1611436410756,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"17p50vf",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/sebi/dev/crypto-dolar-blue/src/index.js",[],["25","26"],"/home/sebi/dev/crypto-dolar-blue/src/App.js",["27"],"import React, {Component} from 'react'\nimport ER from './components/ER.js'\nimport axios from 'axios'\nimport Calc from './components/Calc'\n\n\nexport default class App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      erList: [],\n      usdarsblue: {},\n      usdarsofficial: {},\n      eurarsblue: {},\n      eurarsofficial: {},\n      btcars: {},\n      usdtars: {},\n      btcusd: {},\n      ethusd: {},\n      usdeur: {},\n      usdgbp: {},\n      usdbrl: {},\n      usdmxn: {},\n      usdcny: {},\n\n     loading: true\n    }\n  }\n\n  componentDidMount(){  \n    axios.get('/latest') \n    .then( res => {\n        let coins = res.data\n\n        coins.map( coin => {\n          this.setState({\n            ...this.state,\n            [coin.symbol]: coin\n          })\n        } )\n        this.setState({\n          ...this.state,\n          erList: coins,\n          loading: false\n        })\n\n    })\n    .catch( () => console.log(\"error\"))\n}\n\n\n  render(){\n    if(this.state.loading){\n      return(\n        <div class=\"spinner-grow spinner-border m-5 text-light\" role=\"status\">\n          <span class=\"sr-only\">Loading...</span>\n        </div>\n      )\n    }else{\n      return(\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <nav className=\"col-md-2  sidebar\">\n                <div className=\"sidebar-sticky\">\n                  <h4>CryptoDolarBlue</h4>\n                </div>\n              </nav>\n              <div className=\"col-md-10\">\n\n\n\n\n                <div className=\"er-category\">\n                  <h2>CRIPTOMONEDAS</h2>\n                  <div className=\"er-box\">\n                    <div className=\"er-container\">\n                      <ER coin={this.state.btcusd}/>\n                      <ER coin={this.state.ethusd}/>\n                      <ER coin={this.state.usdtars}/>\n                      <ER coin={this.state.btcars}/>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"er-category\">\n                  <h2>CAMBIO ARGENTINA</h2>\n                  <div className=\"er-box\">\n                    <div className=\"er-container\">\n                      <ER coin={this.state.usdarsblue}/>\n                      <ER coin={this.state.usdarsofficial}/>\n                      <ER coin={this.state.eurarsblue}/>\n                      <ER coin={this.state.eurarsofficial}/>\n\n\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"er-category\">\n                  <h2>DOLAR EN OTROS PA√çSES</h2>\n                  <div className=\"er-box\">\n                    <div className=\"er-container\">\n                      <ER coin={this.state.usdeur}/>\n                      <ER coin={this.state.usdgbp}/>\n                      <ER coin={this.state.usdbrl}/>\n                      <ER coin={this.state.usdmxn}/>\n                      <ER coin={this.state.usdcny}/>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"er-category\">\n                  <h2>CALCULADORA</h2>\n                      <Calc erList={this.state.erList} />\n                </div>\n\n\n              </div>\n            </div>\n          </div>\n      )\n\n    }\n  }\n}\n\n\n","/home/sebi/dev/crypto-dolar-blue/src/components/ER.js",["28"],"import React, {Component} from 'react'\nimport axios from 'axios'\nimport FormattedPrice from './FormattedPrice'\n\nexport default class ER extends Component{\n    constructor(props){\n        super(props)\n        this.state ={\n            bid: this.props.coin.bid,\n            ask: this.props.coin.ask,\n            id: \"\",\n            ticker: this.props.coin.ticker\n        }\n\n        this.updatePrice = this.updatePrice.bind(this)\n        this.changeColor = this.changeColor.bind(this)\n    }\n\n    changeColor() {\n        this.setState({\n            ...this.state,\n            id: this.props.coin.symbol \n        })\n        setTimeout( () => {\n            this.setState({\n                ...this.state,\n                id: '',\n            })\n        }, 1000);\n    }\n\n\n    updatePrice(){\n        axios.get('https://www.bitstamp.net/api/v2/ticker/' + this.props.coin.symbol + '/')\n        .then( res => {\n            this.changeColor()\n            this.setState({\n                bid: res.data.bid ,\n                ask: res.data.ask ,\n            })\n        })\n        .catch(err => console.log('no response'+ err))\n\n    }\n    \n    componentDidMount(){\n        this.setState({\n            bid: this.props.coin.bid,\n            ask: this.props.coin.ask,\n            id: \"\",\n            ticker: this.props.coin.ticker\n        })\n        if(this.state.ticker == true){\n            this.updatePrice()\n            let seconds = 3 \n            let the_interval = seconds* 1000\n            setInterval(this.updatePrice, the_interval)\n        }\n    }\n\n    render(){\n\n        return(\n            <div className=\"er\" id={this.state.id}>\n                <h4 id={this.props.coin.symbol}>{this.props.coin.name}</h4>\n                Venta\n                <div className=\"bid\">\n                    <div className=\"currency\">{this.props.coin.priceIn}</div>\n                    <FormattedPrice price={this.state.bid} size=\"big\" />\n                </div>\n                <hr className=\"dashed\"/>\n                Compra\n                <div className=\"ask\">\n                    <div className=\"currency\">{this.props.coin.priceIn}</div> \n                    <FormattedPrice price={this.props.coin.ask} size=\"small\"/>\n                </div>\n            </div>\n\n        )\n    }\n\n}","/home/sebi/dev/crypto-dolar-blue/src/components/FormattedPrice.js",[],"/home/sebi/dev/crypto-dolar-blue/src/components/Calc.js",["29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":35,"column":25,"nodeType":"36","messageId":"37","endLine":35,"endColumn":27},{"ruleId":"38","severity":1,"message":"39","line":53,"column":30,"nodeType":"40","messageId":"41","endLine":53,"endColumn":32},{"ruleId":"34","severity":1,"message":"35","line":58,"column":35,"nodeType":"36","messageId":"37","endLine":58,"endColumn":37},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]